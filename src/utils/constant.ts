export enum ErrorCommonStrings {
  INTERNAL_SERVER_ERROR = "Internal server error.",
  BAD_INPUT = "BAD_INPUT",
  BAD_REQUEST = "BAD_REQUEST",
  INVALID_USER = "Invalid User",
  INVALID_PASSWORD = "Invalid Password",
  OLD_PASSWORD = "Old Password Is Wrong",
  TOO_MANY_REQUEST = "Too Many Requests",
  UNAUTHORIZED_REQUEST = "UNAUTHORIZED_REQUEST",
  EMAIL_INVALID = "Email Is Invalid",
  USER_NOT_FOUND = "User Not Found",
  INVALID_REQUEST = "Invalid Request",
  UNVERIFIED = "Unverified Email",
  NOT_FOUND = "Not Found",
  NOT_IMPLEMENTED = "Not Implemented",
  ALREADY_EXIST = "Already Exist",
  PLEASE_PROVIDE_ID = "Please provide Id.",
  NOT_AUTHORIZED = "Not Authorized.",
  MISSING_DEVICE = "Missing deviceId in request.",
  DEVICE_NOT_FOUND = "Device not found.",
  DEVICE_ID_REQUIRED = "Device ID is required.",
  DEVICE_ALREADY_EXIST = "Device already registered.",
  NOT_ALLOWED = "MethodNotAllowedError",
  TRANSACTION_FAILED = "transactionFailed",
}
export const localConstant = {
  ERROR_CREATING_ORGANIZATION: "Error creating organization",
  ERROR_CREATING_LOCATION: "Error creating location",
  ERROR_CREATING_EMPLOYEE: "Error creating employee",
  ERROR_GETTING_BRAND_WITH_OWNERS: "Error getting brand with owners",
  ERROR_GETTING_USER_HIERARCHY: "Error getting user hierarchy",
  ERROR_UPDATING_BRAND: "Error updating brand",
  ERROR_CREATING_DEPARTMENT: "Error creating department",
  ERROR_UPDATING_TEAM: "Error updating team",
  ERROR_CREATING_BRAND: "Error creating brand",
  ERROR_LOGIN: "Error while login",
  ERROR_ASSIGNING_BRAND_TO_BO: "Error assigning brand to BO",
  ERROR_GETTING_ORGANIZATION: "Error getting organization",
  ERROR_GETTING_BRAND_DETAILS: "Error getting brand details",
  ERROR_ASSIGNING_ROLE_TO_USER: "Error assigning role to user",
  ERROR_UPDATING_USER: "Error in updating the user details",
  ERROR_SHIFTIING_USER_TEAM: "Error shifting user team",
  ERROR_CREATING_USER: "Error creating user",
  ERROR_UPDATING_CONTACT_PERSON: "Error updating contact person",
  ERROR_CREATING_PERSON: "Error creating person",
  ERROR_GETTING_BRANDS: "Error getting brands",
  ERROR_UPDATING_NODE: "Error updating node",
  ERROR_DELETING_NODE: "Error deleting node",
  ERROR_GETTING_TEAM_MEMBERS: "Error getting team members",
};
